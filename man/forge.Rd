% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forge.R
\name{forge}
\alias{forge}
\title{Forests for generative modeling}
\usage{
forge(psi, n_synth, family = "truncnorm", parallel = TRUE)
}
\arguments{
\item{psi}{Parameters learned via \code{forde}.}

\item{n_synth}{Number of synthetic samples to generate.}

\item{family}{Distribution to use for random sampling. Current options
include truncated normal (the default \code{family = "truncnorm"}) and
uniform (\code{family = "unif"}). See Details.}

\item{parallel}{Compute in parallel? Must register backend beforehand, e.g.
via \code{doParallel}.}
}
\value{
A dataset of \code{n_synth} synthetic samples. Because continuous and
categorical features are treated separately, columns may not be in the same
order as the input data passed to \code{adversarial_rf}.
}
\description{
Uses pre-trained FORDE model to simulate synthetic data.
}
\details{
\code{forge} simulates a synthetic dataset of \code{n_synth} samples. First,
leaves are sampled in proportion to their coverage. Then, each feature is
sampled independently within each leaf according to the probability mass or
density function learned by \code{\link{forde}}. This will create realistic
data so long as the random forest used in the previous step satisfies the
local independence criterion.

Currently, \code{forge} only provides support for truncated normal or uniform
densities when features are continuous. Future releases will accommodate
a larger class of distributional families.
}
\examples{
arf <- adversarial_rf(iris)
fd <- forde(arf, iris)
x_synth <- forge(fd$psi, n_synth = 100)

}
\references{
Watson, D., Blesch, K., Kapar, J., & Wright, M. (2022). Adversarial random
forests for density estimation and generative modeling. \emph{arXiv} preprint,
2205.09435.
}
\seealso{
\code{\link{adversarial_rf}}, \code{\link{forde}}
}
